{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, redirect } from 'react-router-dom';\nimport useAuth from './index'; // นำเข้า useAuth hook เพื่อตรวจสอบสถานะผู้ใช้\n\nconst PrivateRouteLogin = ({\n  children,\n  redirectTo\n}) => {\n  _s();\n  const {\n    user\n  } = useAuth(); // ใช้ custom hook เพื่อเช็คสถานะผู้ใช้\n  const [authenticated, setAuthenticated] = useState(false);\n  if (user) {\n    setAuthenticated(true);\n  } else {\n    setAuthenticated(false);\n  }\n  return children;\n};\n_s(PrivateRouteLogin, \"pu+zDY2KBqU+hYa4BCskpoVwNsc=\", false, function () {\n  return [useAuth];\n});\n_c = PrivateRouteLogin;\nexport default PrivateRouteLogin;\nvar _c;\n$RefreshReg$(_c, \"PrivateRouteLogin\");","map":{"version":3,"names":["React","Navigate","redirect","useAuth","PrivateRouteLogin","children","redirectTo","_s","user","authenticated","setAuthenticated","useState","_c","$RefreshReg$"],"sources":["C:/Users/Asus/OneDrive/เอกสาร/GitHub/ABGS-Website-project/src/Auth/PrivateRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate,redirect } from 'react-router-dom';\r\nimport useAuth from './index'; // นำเข้า useAuth hook เพื่อตรวจสอบสถานะผู้ใช้\r\n\r\nconst PrivateRouteLogin = ({ children,redirectTo }) => {\r\n  const {user} = useAuth(); // ใช้ custom hook เพื่อเช็คสถานะผู้ใช้\r\n  const [authenticated, setAuthenticated] = useState(false);\r\n  \r\n  if (user) {\r\n    setAuthenticated(true);\r\n  } else {\r\n    setAuthenticated(false);\r\n  }\r\n\r\n  return children;\r\n};\r\nexport default PrivateRouteLogin;\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAACC,QAAQ,QAAQ,kBAAkB;AACpD,OAAOC,OAAO,MAAM,SAAS,CAAC,CAAC;;AAE/B,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC,QAAQ;EAACC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACrD,MAAM;IAACC;EAAI,CAAC,GAAGL,OAAO,CAAC,CAAC,CAAC,CAAC;EAC1B,MAAM,CAACM,aAAa,EAAEC,gBAAgB,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;EAEzD,IAAIH,IAAI,EAAE;IACRE,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC,MAAM;IACLA,gBAAgB,CAAC,KAAK,CAAC;EACzB;EAEA,OAAOL,QAAQ;AACjB,CAAC;AAACE,EAAA,CAXIH,iBAAiB;EAAA,QACND,OAAO;AAAA;AAAAS,EAAA,GADlBR,iBAAiB;AAYvB,eAAeA,iBAAiB;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}